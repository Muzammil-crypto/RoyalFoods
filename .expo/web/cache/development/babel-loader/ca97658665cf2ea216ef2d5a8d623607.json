{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MaybeScreen = MaybeScreen;\nexports.MaybeScreenContainer = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _excluded = [\"enabled\"],\n  _excluded2 = [\"visible\", \"children\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nvar MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var _Screens, _Screens$screensEnabl;\n  var enabled = _ref.enabled,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  if ((_Screens = Screens) !== null && _Screens !== void 0 && (_Screens$screensEnabl = _Screens.screensEnabled) !== null && _Screens$screensEnabl !== void 0 && _Screens$screensEnabl.call(_Screens)) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(_reactNative.View, rest);\n};\nexports.MaybeScreenContainer = MaybeScreenContainer;\nfunction MaybeScreen(_ref2) {\n  var _Screens2, _Screens2$screensEnab;\n  var visible = _ref2.visible,\n    children = _ref2.children,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  if ((_Screens2 = Screens) !== null && _Screens2 !== void 0 && (_Screens2$screensEnab = _Screens2.screensEnabled) !== null && _Screens2$screensEnab !== void 0 && _Screens2$screensEnab.call(_Screens2)) {\n    return React.createElement(Screens.Screen, _extends({\n      activityState: visible ? 2 : 0\n    }, rest), children);\n  }\n  return React.createElement(_elements.ResourceSavingView, _extends({\n    visible: visible\n  }, rest), children);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;AACA;AACA;AAAoE;EAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAUpE,IAAIA,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CACV;AAGK,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAGC,MAO9B;EAAA;EAAA,IANJC,OAAO,GAMRD,KANCC,OAAO;IACJC,8CAKJF;EACC,gBAAIJ,OAAO,8DAAPO,SAASC,cAAc,kDAAvBC,oCAA2B,EAAE;IAC/B,OAAOC,oBAACV,OAAO,CAACW,eAAe;MAACN,OAAO,EAAEA;IAAQ,GAAKC,IAAI,EAAI;EAChE;EAEA,OAAOI,oBAACE,iBAAI,EAAKN,IAAI,CAAI;AAC3B,CAAC;AAAA;AAEM,SAASO,WAAW,QAAwC;EAAA;EAAA,IAArCC,OAAO,GAA4BC,MAAnCD,OAAO;IAAEE,QAAQ,GAAkBD,MAA1BC,QAAQ;IAAKV,8CAAaS;EAC/D,iBAAIf,OAAO,+DAAPiB,UAAST,cAAc,kDAAvBU,qCAA2B,EAAE;IAC/B,OACER,oBAACV,OAAO,CAACmB,MAAM;MAACC,aAAa,EAAEN,OAAO,GAAG,CAAC,GAAG;IAAE,GAAKR,IAAI,GACrDU,QAAQ,CACM;EAErB;EAEA,OACEN,oBAACW,4BAAkB;IAACP,OAAO,EAAEA;EAAQ,GAAKR,IAAI,GAC3CU,QAAQ,CACU;AAEzB","names":["Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_Screens","screensEnabled","_Screens$screensEnabl","React","ScreenContainer","View","MaybeScreen","visible","_ref2","children","_Screens2","_Screens2$screensEnab","Screen","activityState","ResourceSavingView"],"sourceRoot":"../../src","sources":["ScreenFallback.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}