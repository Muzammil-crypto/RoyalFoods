{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\nvar _constants = require(\"../constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\World\\\\Downloads\\\\project\\\\screens\\\\Restaurant.js\";\nvar Restaurant = function Restaurant(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var scrollX = new _reactNative.Animated.Value(0);\n  var _React$useState = _react.default.useState(null),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    restaurant = _React$useState2[0],\n    setRestaurant = _React$useState2[1];\n  var _React$useState3 = _react.default.useState(null),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    currentLocation = _React$useState4[0],\n    setCurrentLocation = _React$useState4[1];\n  var _React$useState5 = _react.default.useState([]),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    orderItems = _React$useState6[0],\n    setOrderItems = _React$useState6[1];\n  _react.default.useEffect(function () {\n    var _route$params = route.params,\n      item = _route$params.item,\n      currentLocation = _route$params.currentLocation;\n    setRestaurant(item);\n    setCurrentLocation(currentLocation);\n  });\n  function editOrder(action, menuId, price) {\n    var orderList = orderItems.slice();\n    var item = orderList.filter(function (a) {\n      return a.menuId == menuId;\n    });\n    if (action == \"+\") {\n      if (item.length > 0) {\n        var newQty = item[0].qty + 1;\n        item[0].qty = newQty;\n        item[0].total = item[0].qty * price;\n      } else {\n        var newItem = {\n          menuId: menuId,\n          qty: 1,\n          price: price,\n          total: price\n        };\n        orderList.push(newItem);\n      }\n      setOrderItems(orderList);\n    } else {\n      if (item.length > 0) {\n        var _item$;\n        if (((_item$ = item[0]) == null ? void 0 : _item$.qty) > 0) {\n          var _newQty = item[0].qty - 1;\n          item[0].qty = _newQty;\n          item[0].total = _newQty * price;\n        }\n      }\n      setOrderItems(orderList);\n    }\n  }\n  function getOrderQty(menuId) {\n    var orderItem = orderItems.filter(function (a) {\n      return a.menuId == menuId;\n    });\n    if (orderItem.length > 0) {\n      return orderItem[0].qty;\n    }\n    return 0;\n  }\n  function getBasketItemCount() {\n    var itemCount = orderItems.reduce(function (a, b) {\n      return a + (b.qty || 0);\n    }, 0);\n    return itemCount;\n  }\n  function sumOrder() {\n    var total = orderItems.reduce(function (a, b) {\n      return a + (b.total || 0);\n    }, 0);\n    return total.toFixed(2);\n  }\n  function renderFoodInfo() {\n    var _restaurant$menu,\n      _this2 = this;\n    return (0, _jsxRuntime.jsx)(_reactNative.Animated.ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      scrollEventThrottle: 16,\n      snapToAlignment: \"center\",\n      showsHorizontalScrollIndicator: false,\n      onScroll: _reactNative.Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }], {\n        useNativeDriver: false\n      }),\n      children: restaurant == null ? void 0 : (_restaurant$menu = restaurant.menu) == null ? void 0 : _restaurant$menu.map(function (item, index) {\n        return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: {\n            alignItems: \"center\"\n          },\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: {\n              height: _constants.SIZES.height * 0.35\n            },\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n              source: item.photo,\n              resizeMode: \"cover\",\n              style: {\n                width: _constants.SIZES.width,\n                height: \"100%\"\n              }\n            }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: {\n                position: \"absolute\",\n                bottom: -20,\n                width: _constants.SIZES.width,\n                height: 50,\n                justifyContent: \"center\",\n                flexDirection: \"row\"\n              },\n              children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n                style: {\n                  width: 50,\n                  backgroundColor: _constants.COLORS.white,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderTopLeftRadius: 25,\n                  borderBottomLeftRadius: 25\n                },\n                onPress: function onPress() {\n                  return editOrder(\"-\", item.menuId, item.price);\n                },\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: Object.assign({}, _constants.FONTS.body1),\n                  children: \"-\"\n                })\n              }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: {\n                  width: 50,\n                  backgroundColor: _constants.COLORS.white,\n                  alignItems: \"center\",\n                  justifyContent: \"center\"\n                },\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: Object.assign({}, _constants.FONTS.h2),\n                  children: getOrderQty(item.menuId)\n                })\n              }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n                style: {\n                  width: 50,\n                  backgroundColor: _constants.COLORS.white,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderTopRightRadius: 25,\n                  borderBottomRightRadius: 25\n                },\n                onPress: function onPress() {\n                  return editOrder(\"+\", item.menuId, item.price);\n                },\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: Object.assign({}, _constants.FONTS.body1),\n                  children: \"+\"\n                })\n              })]\n            })]\n          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: {\n              width: _constants.SIZES.width,\n              alignItems: \"center\",\n              marginTop: 15,\n              paddingHorizontal: _constants.SIZES.padding * 2\n            },\n            children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {\n              style: Object.assign({\n                marginVertical: 10,\n                textAlign: \"center\"\n              }, _constants.FONTS.h2),\n              children: [item.name, \" - \", item.price.toFixed(2)]\n            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: Object.assign({}, _constants.FONTS.body3),\n              children: item.description\n            })]\n          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 10\n            },\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n              source: _constants.icons.fire,\n              style: {\n                width: 20,\n                height: 20,\n                marginRight: 10\n              }\n            }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n              style: Object.assign({}, _constants.FONTS.body3, {\n                color: _constants.COLORS.darygray\n              }),\n              children: [item.calories.toFixed(2), \" cal\"]\n            })]\n          })]\n        }, \"menu-\" + index);\n      })\n    });\n  }\n  function renderDots() {\n    var _this3 = this;\n    var dotPosition = _reactNative.Animated.divide(scrollX, _constants.SIZES.width);\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: {\n        height: 30\n      },\n      children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: _constants.SIZES.padding\n        },\n        children: restaurant == null ? void 0 : restaurant.menu.map(function (item, index) {\n          var opacity = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [0.3, 1, 0.3],\n            extrapolate: \"clamp\"\n          });\n          var dotSize = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [_constants.SIZES.base * 0.8, 10, _constants.SIZES.base * 0.8],\n            extrapolate: \"clamp\"\n          });\n          var dotColor = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [_constants.COLORS.darkgray, _constants.COLORS.primary, _constants.COLORS.darkgray],\n            extrapolate: \"clamp\"\n          });\n          return (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n            opacity: opacity,\n            style: {\n              borderRadius: _constants.SIZES.radius,\n              marginHorizontal: 6,\n              width: dotSize,\n              height: dotSize,\n              backgroundColor: dotColor\n            }\n          }, \"dot-\" + index);\n        })\n      })\n    });\n  }\n  function renderOrder() {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      children: [renderDots(), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: {\n          backgroundColor: _constants.COLORS.white,\n          borderTopLeftRadius: 40,\n          borderTopRightRadius: 40\n        },\n        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            paddingVertical: _constants.SIZES.padding * 2,\n            paddingHorizontal: _constants.SIZES.padding * 3,\n            borderBottomColor: _constants.COLORS.lightGray2,\n            borderBottomWidth: 1\n          },\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {\n            style: Object.assign({}, _constants.FONTS.h3),\n            children: [getBasketItemCount(), \" items in Cart\"]\n          }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n            style: Object.assign({}, _constants.FONTS.h3),\n            children: [\"$\", sumOrder()]\n          })]\n        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            paddingVertical: _constants.SIZES.padding * 2,\n            paddingHorizontal: _constants.SIZES.padding * 3\n          },\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n              source: _constants.icons.pin,\n              resizeMode: \"contain\",\n              style: {\n                width: 20,\n                height: 20,\n                tintColor: _constants.COLORS.darkgray\n              }\n            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: Object.assign({\n                marginLeft: _constants.SIZES.padding\n              }, _constants.FONTS.h4),\n              children: \"Location\"\n            })]\n          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n              source: _constants.icons.master_card,\n              resizeMode: \"contain\",\n              style: {\n                width: 20,\n                height: 20,\n                tintColor: _constants.COLORS.darkgray\n              }\n            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: Object.assign({\n                marginLeft: _constants.SIZES.padding\n              }, _constants.FONTS.h4),\n              children: \"8888\"\n            })]\n          })]\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            padding: _constants.SIZES.padding * 2,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n            style: {\n              width: _constants.SIZES.width * 0.9,\n              padding: _constants.SIZES.padding,\n              backgroundColor: _constants.COLORS.primary,\n              alignItems: \"center\",\n              borderRadius: _constants.SIZES.radius\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"OrderDelivery\", {\n                restaurant: restaurant,\n                currentLocation: currentLocation\n              });\n            },\n            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: Object.assign({\n                color: _constants.COLORS.white\n              }, _constants.FONTS.h2),\n              children: \"Order restaurant screen\"\n            })\n          })\n        })]\n      }), (0, _reactNativeIphoneXHelper.isIphoneX)() && (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          position: \"absolute\",\n          bottom: -34,\n          left: 0,\n          right: 0,\n          height: 34,\n          backgroundColor: _constants.COLORS.white\n        }\n      })]\n    });\n  }\n  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {\n    style: styles.container,\n    children: [renderFoodInfo(), renderOrder()]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: _constants.COLORS.lightGray2\n  }\n});\nvar _default = Restaurant;\nexports.default = _default;","map":{"version":3,"names":["Restaurant","route","navigation","scrollX","Animated","Value","React","useState","restaurant","setRestaurant","currentLocation","setCurrentLocation","orderItems","setOrderItems","useEffect","params","item","editOrder","action","menuId","price","orderList","slice","filter","a","length","newQty","qty","total","newItem","push","getOrderQty","orderItem","getBasketItemCount","itemCount","reduce","b","sumOrder","toFixed","renderFoodInfo","event","nativeEvent","contentOffset","x","useNativeDriver","menu","map","index","alignItems","height","SIZES","photo","width","position","bottom","justifyContent","flexDirection","backgroundColor","COLORS","white","borderTopLeftRadius","borderBottomLeftRadius","FONTS","body1","h2","borderTopRightRadius","borderBottomRightRadius","marginTop","paddingHorizontal","padding","marginVertical","textAlign","name","body3","description","icons","fire","marginRight","color","darygray","calories","renderDots","dotPosition","divide","opacity","interpolate","inputRange","outputRange","extrapolate","dotSize","base","dotColor","darkgray","primary","borderRadius","radius","marginHorizontal","renderOrder","paddingVertical","borderBottomColor","lightGray2","borderBottomWidth","h3","pin","tintColor","marginLeft","h4","master_card","navigate","isIphoneX","left","right","styles","container","StyleSheet","create","flex"],"sources":["C:/Users/World/Downloads/project/screens/Restaurant.js"],"sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  Animated,\n} from \"react-native\";\nimport { isIphoneX } from \"react-native-iphone-x-helper\";\n\nimport { icons, COLORS, SIZES, FONTS } from \"../constants\";\n\nconst Restaurant = ({ route, navigation }) => {\n  const scrollX = new Animated.Value(0);\n  const [restaurant, setRestaurant] = React.useState(null);\n  const [currentLocation, setCurrentLocation] = React.useState(null);\n  const [orderItems, setOrderItems] = React.useState([]);\n\n  React.useEffect(() => {\n    let { item, currentLocation } = route.params;\n\n    setRestaurant(item);\n    setCurrentLocation(currentLocation);\n  });\n\n  function editOrder(action, menuId, price) {\n    let orderList = orderItems.slice();\n    let item = orderList.filter((a) => a.menuId == menuId);\n\n    if (action == \"+\") {\n      if (item.length > 0) {\n        let newQty = item[0].qty + 1;\n        item[0].qty = newQty;\n        item[0].total = item[0].qty * price;\n      } else {\n        const newItem = {\n          menuId: menuId,\n          qty: 1,\n          price: price,\n          total: price,\n        };\n        orderList.push(newItem);\n      }\n\n      setOrderItems(orderList);\n    } else {\n      if (item.length > 0) {\n        if (item[0]?.qty > 0) {\n          let newQty = item[0].qty - 1;\n          item[0].qty = newQty;\n          item[0].total = newQty * price;\n        }\n      }\n\n      setOrderItems(orderList);\n    }\n  }\n\n  function getOrderQty(menuId) {\n    let orderItem = orderItems.filter((a) => a.menuId == menuId);\n\n    if (orderItem.length > 0) {\n      return orderItem[0].qty;\n    }\n\n    return 0;\n  }\n\n  function getBasketItemCount() {\n    let itemCount = orderItems.reduce((a, b) => a + (b.qty || 0), 0);\n\n    return itemCount;\n  }\n\n  function sumOrder() {\n    let total = orderItems.reduce((a, b) => a + (b.total || 0), 0);\n\n    return total.toFixed(2);\n  }\n\n  function renderFoodInfo() {\n    return (\n      <Animated.ScrollView\n        horizontal\n        pagingEnabled\n        scrollEventThrottle={16}\n        snapToAlignment=\"center\"\n        showsHorizontalScrollIndicator={false}\n        onScroll={Animated.event(\n          [{ nativeEvent: { contentOffset: { x: scrollX } } }],\n          { useNativeDriver: false }\n        )}\n      >\n        {restaurant?.menu?.map((item, index) => (\n          <View key={`menu-${index}`} style={{ alignItems: \"center\" }}>\n            <View style={{ height: SIZES.height * 0.35 }}>\n              {/* Food Image */}\n              <Image\n                source={item.photo}\n                resizeMode=\"cover\"\n                style={{\n                  width: SIZES.width,\n                  height: \"100%\",\n                }}\n              />\n\n              {/* Quantity */}\n              <View\n                style={{\n                  position: \"absolute\",\n                  bottom: -20,\n                  width: SIZES.width,\n                  height: 50,\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 50,\n                    backgroundColor: COLORS.white,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    borderTopLeftRadius: 25,\n                    borderBottomLeftRadius: 25,\n                  }}\n                  onPress={() => editOrder(\"-\", item.menuId, item.price)}\n                >\n                  <Text style={{ ...FONTS.body1 }}>-</Text>\n                </TouchableOpacity>\n\n                <View\n                  style={{\n                    width: 50,\n                    backgroundColor: COLORS.white,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text style={{ ...FONTS.h2 }}>\n                    {getOrderQty(item.menuId)}\n                  </Text>\n                </View>\n\n                <TouchableOpacity\n                  style={{\n                    width: 50,\n                    backgroundColor: COLORS.white,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    borderTopRightRadius: 25,\n                    borderBottomRightRadius: 25,\n                  }}\n                  onPress={() => editOrder(\"+\", item.menuId, item.price)}\n                >\n                  <Text style={{ ...FONTS.body1 }}>+</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* Name & Description */}\n            <View\n              style={{\n                width: SIZES.width,\n                alignItems: \"center\",\n                marginTop: 15,\n                paddingHorizontal: SIZES.padding * 2,\n              }}\n            >\n              <Text\n                style={{ marginVertical: 10, textAlign: \"center\", ...FONTS.h2 }}\n              >\n                {item.name} - {item.price.toFixed(2)}\n              </Text>\n              <Text style={{ ...FONTS.body3 }}>{item.description}</Text>\n            </View>\n\n            {/* Calories */}\n            <View\n              style={{\n                flexDirection: \"row\",\n                marginTop: 10,\n              }}\n            >\n              <Image\n                source={icons.fire}\n                style={{\n                  width: 20,\n                  height: 20,\n                  marginRight: 10,\n                }}\n              />\n\n              <Text\n                style={{\n                  ...FONTS.body3,\n                  color: COLORS.darygray,\n                }}\n              >\n                {item.calories.toFixed(2)} cal\n              </Text>\n            </View>\n          </View>\n        ))}\n      </Animated.ScrollView>\n    );\n  }\n\n  function renderDots() {\n    const dotPosition = Animated.divide(scrollX, SIZES.width);\n\n    return (\n      <View style={{ height: 30 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: SIZES.padding,\n          }}\n        >\n          {restaurant?.menu.map((item, index) => {\n            const opacity = dotPosition.interpolate({\n              inputRange: [index - 1, index, index + 1],\n              outputRange: [0.3, 1, 0.3],\n              extrapolate: \"clamp\",\n            });\n\n            const dotSize = dotPosition.interpolate({\n              inputRange: [index - 1, index, index + 1],\n              outputRange: [SIZES.base * 0.8, 10, SIZES.base * 0.8],\n              extrapolate: \"clamp\",\n            });\n\n            const dotColor = dotPosition.interpolate({\n              inputRange: [index - 1, index, index + 1],\n              outputRange: [COLORS.darkgray, COLORS.primary, COLORS.darkgray],\n              extrapolate: \"clamp\",\n            });\n\n            return (\n              <Animated.View\n                key={`dot-${index}`}\n                opacity={opacity}\n                style={{\n                  borderRadius: SIZES.radius,\n                  marginHorizontal: 6,\n                  width: dotSize,\n                  height: dotSize,\n                  backgroundColor: dotColor,\n                }}\n              />\n            );\n          })}\n        </View>\n      </View>\n    );\n  }\n\n  function renderOrder() {\n    return (\n      <View>\n        {renderDots()}\n        <View\n          style={{\n            backgroundColor: COLORS.white,\n            borderTopLeftRadius: 40,\n            borderTopRightRadius: 40,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              paddingVertical: SIZES.padding * 2,\n              paddingHorizontal: SIZES.padding * 3,\n              borderBottomColor: COLORS.lightGray2,\n              borderBottomWidth: 1,\n            }}\n          >\n            <Text style={{ ...FONTS.h3 }}>\n              {getBasketItemCount()} items in Cart\n            </Text>\n            <Text style={{ ...FONTS.h3 }}>${sumOrder()}</Text>\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              paddingVertical: SIZES.padding * 2,\n              paddingHorizontal: SIZES.padding * 3,\n            }}\n          >\n            <View style={{ flexDirection: \"row\" }}>\n              <Image\n                source={icons.pin}\n                resizeMode=\"contain\"\n                style={{\n                  width: 20,\n                  height: 20,\n                  tintColor: COLORS.darkgray,\n                }}\n              />\n              <Text style={{ marginLeft: SIZES.padding, ...FONTS.h4 }}>\n                Location\n              </Text>\n            </View>\n\n            <View style={{ flexDirection: \"row\" }}>\n              <Image\n                source={icons.master_card}\n                resizeMode=\"contain\"\n                style={{\n                  width: 20,\n                  height: 20,\n                  tintColor: COLORS.darkgray,\n                }}\n              />\n              <Text style={{ marginLeft: SIZES.padding, ...FONTS.h4 }}>\n                8888\n              </Text>\n            </View>\n          </View>\n\n          {/* Order Button */}\n          <View\n            style={{\n              padding: SIZES.padding * 2,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: SIZES.width * 0.9,\n                padding: SIZES.padding,\n                backgroundColor: COLORS.primary,\n                alignItems: \"center\",\n                borderRadius: SIZES.radius,\n              }}\n              onPress={() =>\n                navigation.navigate(\"OrderDelivery\", {\n                  restaurant: restaurant,\n                  currentLocation: currentLocation,\n                })\n              }\n            >\n              <Text style={{ color: COLORS.white, ...FONTS.h2 }}>\n                Order restaurant screen\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {isIphoneX() && (\n          <View\n            style={{\n              position: \"absolute\",\n              bottom: -34,\n              left: 0,\n              right: 0,\n              height: 34,\n              backgroundColor: COLORS.white,\n            }}\n          ></View>\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* {renderHeader()} */}\n      {renderFoodInfo()}\n      {renderOrder()}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2,\n  },\n});\n\nexport default Restaurant;\n"],"mappings":";;;;;;AAAA;AACA;AASA;AAEA;AAA2D;AAAA;EAAA;AAE3D,IAAMA,UAAU,GAAG,SAAbA,UAAU,OAA8B;EAAA,IAAxBC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;EACrC,IAAMC,OAAO,GAAG,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;EACrC,sBAAoCC,cAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDC,UAAU;IAAEC,aAAa;EAChC,uBAA8CH,cAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA3DG,eAAe;IAAEC,kBAAkB;EAC1C,uBAAoCL,cAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CK,UAAU;IAAEC,aAAa;EAEhCP,cAAK,CAACQ,SAAS,CAAC,YAAM;IACpB,oBAAgCb,KAAK,CAACc,MAAM;MAAtCC,IAAI,iBAAJA,IAAI;MAAEN,eAAe,iBAAfA,eAAe;IAE3BD,aAAa,CAACO,IAAI,CAAC;IACnBL,kBAAkB,CAACD,eAAe,CAAC;EACrC,CAAC,CAAC;EAEF,SAASO,SAAS,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAE;IACxC,IAAIC,SAAS,GAAGT,UAAU,CAACU,KAAK,EAAE;IAClC,IAAIN,IAAI,GAAGK,SAAS,CAACE,MAAM,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACL,MAAM,IAAIA,MAAM;IAAA,EAAC;IAEtD,IAAID,MAAM,IAAI,GAAG,EAAE;MACjB,IAAIF,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;QACnB,IAAIC,MAAM,GAAGV,IAAI,CAAC,CAAC,CAAC,CAACW,GAAG,GAAG,CAAC;QAC5BX,IAAI,CAAC,CAAC,CAAC,CAACW,GAAG,GAAGD,MAAM;QACpBV,IAAI,CAAC,CAAC,CAAC,CAACY,KAAK,GAAGZ,IAAI,CAAC,CAAC,CAAC,CAACW,GAAG,GAAGP,KAAK;MACrC,CAAC,MAAM;QACL,IAAMS,OAAO,GAAG;UACdV,MAAM,EAAEA,MAAM;UACdQ,GAAG,EAAE,CAAC;UACNP,KAAK,EAAEA,KAAK;UACZQ,KAAK,EAAER;QACT,CAAC;QACDC,SAAS,CAACS,IAAI,CAACD,OAAO,CAAC;MACzB;MAEAhB,aAAa,CAACQ,SAAS,CAAC;IAC1B,CAAC,MAAM;MACL,IAAIL,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;QAAA;QACnB,IAAI,WAAAT,IAAI,CAAC,CAAC,CAAC,qBAAP,OAASW,GAAG,IAAG,CAAC,EAAE;UACpB,IAAID,OAAM,GAAGV,IAAI,CAAC,CAAC,CAAC,CAACW,GAAG,GAAG,CAAC;UAC5BX,IAAI,CAAC,CAAC,CAAC,CAACW,GAAG,GAAGD,OAAM;UACpBV,IAAI,CAAC,CAAC,CAAC,CAACY,KAAK,GAAGF,OAAM,GAAGN,KAAK;QAChC;MACF;MAEAP,aAAa,CAACQ,SAAS,CAAC;IAC1B;EACF;EAEA,SAASU,WAAW,CAACZ,MAAM,EAAE;IAC3B,IAAIa,SAAS,GAAGpB,UAAU,CAACW,MAAM,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACL,MAAM,IAAIA,MAAM;IAAA,EAAC;IAE5D,IAAIa,SAAS,CAACP,MAAM,GAAG,CAAC,EAAE;MACxB,OAAOO,SAAS,CAAC,CAAC,CAAC,CAACL,GAAG;IACzB;IAEA,OAAO,CAAC;EACV;EAEA,SAASM,kBAAkB,GAAG;IAC5B,IAAIC,SAAS,GAAGtB,UAAU,CAACuB,MAAM,CAAC,UAACX,CAAC,EAAEY,CAAC;MAAA,OAAKZ,CAAC,IAAIY,CAAC,CAACT,GAAG,IAAI,CAAC,CAAC;IAAA,GAAE,CAAC,CAAC;IAEhE,OAAOO,SAAS;EAClB;EAEA,SAASG,QAAQ,GAAG;IAClB,IAAIT,KAAK,GAAGhB,UAAU,CAACuB,MAAM,CAAC,UAACX,CAAC,EAAEY,CAAC;MAAA,OAAKZ,CAAC,IAAIY,CAAC,CAACR,KAAK,IAAI,CAAC,CAAC;IAAA,GAAE,CAAC,CAAC;IAE9D,OAAOA,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;EACzB;EAEA,SAASC,cAAc,GAAG;IAAA;MAAA;IACxB,OACE,qBAAC,qBAAQ,CAAC,UAAU;MAClB,UAAU;MACV,aAAa;MACb,mBAAmB,EAAE,EAAG;MACxB,eAAe,EAAC,QAAQ;MACxB,8BAA8B,EAAE,KAAM;MACtC,QAAQ,EAAEnC,qBAAQ,CAACoC,KAAK,CACtB,CAAC;QAAEC,WAAW,EAAE;UAAEC,aAAa,EAAE;YAAEC,CAAC,EAAExC;UAAQ;QAAE;MAAE,CAAC,CAAC,EACpD;QAAEyC,eAAe,EAAE;MAAM,CAAC,CAC1B;MAAA,UAEDpC,UAAU,wCAAVA,UAAU,CAAEqC,IAAI,qBAAhB,iBAAkBC,GAAG,CAAC,UAAC9B,IAAI,EAAE+B,KAAK;QAAA,OACjC,sBAAC,iBAAI;UAAuB,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAA,WAC1D,sBAAC,iBAAI;YAAC,KAAK,EAAE;cAAEC,MAAM,EAAEC,gBAAK,CAACD,MAAM,GAAG;YAAK,CAAE;YAAA,WAE3C,qBAAC,kBAAK;cACJ,MAAM,EAAEjC,IAAI,CAACmC,KAAM;cACnB,UAAU,EAAC,OAAO;cAClB,KAAK,EAAE;gBACLC,KAAK,EAAEF,gBAAK,CAACE,KAAK;gBAClBH,MAAM,EAAE;cACV;YAAE,EACF,EAGF,sBAAC,iBAAI;cACH,KAAK,EAAE;gBACLI,QAAQ,EAAE,UAAU;gBACpBC,MAAM,EAAE,CAAC,EAAE;gBACXF,KAAK,EAAEF,gBAAK,CAACE,KAAK;gBAClBH,MAAM,EAAE,EAAE;gBACVM,cAAc,EAAE,QAAQ;gBACxBC,aAAa,EAAE;cACjB,CAAE;cAAA,WAEF,qBAAC,6BAAgB;gBACf,KAAK,EAAE;kBACLJ,KAAK,EAAE,EAAE;kBACTK,eAAe,EAAEC,iBAAM,CAACC,KAAK;kBAC7BX,UAAU,EAAE,QAAQ;kBACpBO,cAAc,EAAE,QAAQ;kBACxBK,mBAAmB,EAAE,EAAE;kBACvBC,sBAAsB,EAAE;gBAC1B,CAAE;gBACF,OAAO,EAAE;kBAAA,OAAM5C,SAAS,CAAC,GAAG,EAAED,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACI,KAAK,CAAC;gBAAA,CAAC;gBAAA,UAEvD,qBAAC,iBAAI;kBAAC,KAAK,oBAAO0C,gBAAK,CAACC,KAAK,CAAG;kBAAA,UAAC;gBAAC;cAAO,EACxB,EAEnB,qBAAC,iBAAI;gBACH,KAAK,EAAE;kBACLX,KAAK,EAAE,EAAE;kBACTK,eAAe,EAAEC,iBAAM,CAACC,KAAK;kBAC7BX,UAAU,EAAE,QAAQ;kBACpBO,cAAc,EAAE;gBAClB,CAAE;gBAAA,UAEF,qBAAC,iBAAI;kBAAC,KAAK,oBAAOO,gBAAK,CAACE,EAAE,CAAG;kBAAA,UAC1BjC,WAAW,CAACf,IAAI,CAACG,MAAM;gBAAC;cACpB,EACF,EAEP,qBAAC,6BAAgB;gBACf,KAAK,EAAE;kBACLiC,KAAK,EAAE,EAAE;kBACTK,eAAe,EAAEC,iBAAM,CAACC,KAAK;kBAC7BX,UAAU,EAAE,QAAQ;kBACpBO,cAAc,EAAE,QAAQ;kBACxBU,oBAAoB,EAAE,EAAE;kBACxBC,uBAAuB,EAAE;gBAC3B,CAAE;gBACF,OAAO,EAAE;kBAAA,OAAMjD,SAAS,CAAC,GAAG,EAAED,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACI,KAAK,CAAC;gBAAA,CAAC;gBAAA,UAEvD,qBAAC,iBAAI;kBAAC,KAAK,oBAAO0C,gBAAK,CAACC,KAAK,CAAG;kBAAA,UAAC;gBAAC;cAAO,EACxB;YAAA,EACd;UAAA,EACF,EAGP,sBAAC,iBAAI;YACH,KAAK,EAAE;cACLX,KAAK,EAAEF,gBAAK,CAACE,KAAK;cAClBJ,UAAU,EAAE,QAAQ;cACpBmB,SAAS,EAAE,EAAE;cACbC,iBAAiB,EAAElB,gBAAK,CAACmB,OAAO,GAAG;YACrC,CAAE;YAAA,WAEF,sBAAC,iBAAI;cACH,KAAK;gBAAIC,cAAc,EAAE,EAAE;gBAAEC,SAAS,EAAE;cAAQ,GAAKT,gBAAK,CAACE,EAAE,CAAG;cAAA,WAE/DhD,IAAI,CAACwD,IAAI,EAAC,KAAG,EAACxD,IAAI,CAACI,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;YAAA,EAC/B,EACP,qBAAC,iBAAI;cAAC,KAAK,oBAAOwB,gBAAK,CAACW,KAAK,CAAG;cAAA,UAAEzD,IAAI,CAAC0D;YAAW,EAAQ;UAAA,EACrD,EAGP,sBAAC,iBAAI;YACH,KAAK,EAAE;cACLlB,aAAa,EAAE,KAAK;cACpBW,SAAS,EAAE;YACb,CAAE;YAAA,WAEF,qBAAC,kBAAK;cACJ,MAAM,EAAEQ,gBAAK,CAACC,IAAK;cACnB,KAAK,EAAE;gBACLxB,KAAK,EAAE,EAAE;gBACTH,MAAM,EAAE,EAAE;gBACV4B,WAAW,EAAE;cACf;YAAE,EACF,EAEF,sBAAC,iBAAI;cACH,KAAK,oBACAf,gBAAK,CAACW,KAAK;gBACdK,KAAK,EAAEpB,iBAAM,CAACqB;cAAQ,EACtB;cAAA,WAED/D,IAAI,CAACgE,QAAQ,CAAC1C,OAAO,CAAC,CAAC,CAAC,EAAC,MAC5B;YAAA,EAAO;UAAA,EACF;QAAA,aA3GUS,KAAK,CA4GjB;MAAA,CACR;IAAC,EACkB;EAE1B;EAEA,SAASkC,UAAU,GAAG;IAAA;IACpB,IAAMC,WAAW,GAAG9E,qBAAQ,CAAC+E,MAAM,CAAChF,OAAO,EAAE+C,gBAAK,CAACE,KAAK,CAAC;IAEzD,OACE,qBAAC,iBAAI;MAAC,KAAK,EAAE;QAAEH,MAAM,EAAE;MAAG,CAAE;MAAA,UAC1B,qBAAC,iBAAI;QACH,KAAK,EAAE;UACLO,aAAa,EAAE,KAAK;UACpBR,UAAU,EAAE,QAAQ;UACpBO,cAAc,EAAE,QAAQ;UACxBN,MAAM,EAAEC,gBAAK,CAACmB;QAChB,CAAE;QAAA,UAED7D,UAAU,oBAAVA,UAAU,CAAEqC,IAAI,CAACC,GAAG,CAAC,UAAC9B,IAAI,EAAE+B,KAAK,EAAK;UACrC,IAAMqC,OAAO,GAAGF,WAAW,CAACG,WAAW,CAAC;YACtCC,UAAU,EAAE,CAACvC,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;YACzCwC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;YAC1BC,WAAW,EAAE;UACf,CAAC,CAAC;UAEF,IAAMC,OAAO,GAAGP,WAAW,CAACG,WAAW,CAAC;YACtCC,UAAU,EAAE,CAACvC,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;YACzCwC,WAAW,EAAE,CAACrC,gBAAK,CAACwC,IAAI,GAAG,GAAG,EAAE,EAAE,EAAExC,gBAAK,CAACwC,IAAI,GAAG,GAAG,CAAC;YACrDF,WAAW,EAAE;UACf,CAAC,CAAC;UAEF,IAAMG,QAAQ,GAAGT,WAAW,CAACG,WAAW,CAAC;YACvCC,UAAU,EAAE,CAACvC,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;YACzCwC,WAAW,EAAE,CAAC7B,iBAAM,CAACkC,QAAQ,EAAElC,iBAAM,CAACmC,OAAO,EAAEnC,iBAAM,CAACkC,QAAQ,CAAC;YAC/DJ,WAAW,EAAE;UACf,CAAC,CAAC;UAEF,OACE,qBAAC,qBAAQ,CAAC,IAAI;YAEZ,OAAO,EAAEJ,OAAQ;YACjB,KAAK,EAAE;cACLU,YAAY,EAAE5C,gBAAK,CAAC6C,MAAM;cAC1BC,gBAAgB,EAAE,CAAC;cACnB5C,KAAK,EAAEqC,OAAO;cACdxC,MAAM,EAAEwC,OAAO;cACfhC,eAAe,EAAEkC;YACnB;UAAE,YARU5C,KAAK,CASjB;QAEN,CAAC;MAAC;IACG,EACF;EAEX;EAEA,SAASkD,WAAW,GAAG;IACrB,OACE,sBAAC,iBAAI;MAAA,WACFhB,UAAU,EAAE,EACb,sBAAC,iBAAI;QACH,KAAK,EAAE;UACLxB,eAAe,EAAEC,iBAAM,CAACC,KAAK;UAC7BC,mBAAmB,EAAE,EAAE;UACvBK,oBAAoB,EAAE;QACxB,CAAE;QAAA,WAEF,sBAAC,iBAAI;UACH,KAAK,EAAE;YACLT,aAAa,EAAE,KAAK;YACpBD,cAAc,EAAE,eAAe;YAC/B2C,eAAe,EAAEhD,gBAAK,CAACmB,OAAO,GAAG,CAAC;YAClCD,iBAAiB,EAAElB,gBAAK,CAACmB,OAAO,GAAG,CAAC;YACpC8B,iBAAiB,EAAEzC,iBAAM,CAAC0C,UAAU;YACpCC,iBAAiB,EAAE;UACrB,CAAE;UAAA,WAEF,sBAAC,iBAAI;YAAC,KAAK,oBAAOvC,gBAAK,CAACwC,EAAE,CAAG;YAAA,WAC1BrE,kBAAkB,EAAE,EAAC,gBACxB;UAAA,EAAO,EACP,sBAAC,iBAAI;YAAC,KAAK,oBAAO6B,gBAAK,CAACwC,EAAE,CAAG;YAAA,WAAC,GAAC,EAACjE,QAAQ,EAAE;UAAA,EAAQ;QAAA,EAC7C,EAEP,sBAAC,iBAAI;UACH,KAAK,EAAE;YACLmB,aAAa,EAAE,KAAK;YACpBD,cAAc,EAAE,eAAe;YAC/B2C,eAAe,EAAEhD,gBAAK,CAACmB,OAAO,GAAG,CAAC;YAClCD,iBAAiB,EAAElB,gBAAK,CAACmB,OAAO,GAAG;UACrC,CAAE;UAAA,WAEF,sBAAC,iBAAI;YAAC,KAAK,EAAE;cAAEb,aAAa,EAAE;YAAM,CAAE;YAAA,WACpC,qBAAC,kBAAK;cACJ,MAAM,EAAEmB,gBAAK,CAAC4B,GAAI;cAClB,UAAU,EAAC,SAAS;cACpB,KAAK,EAAE;gBACLnD,KAAK,EAAE,EAAE;gBACTH,MAAM,EAAE,EAAE;gBACVuD,SAAS,EAAE9C,iBAAM,CAACkC;cACpB;YAAE,EACF,EACF,qBAAC,iBAAI;cAAC,KAAK;gBAAIa,UAAU,EAAEvD,gBAAK,CAACmB;cAAO,GAAKP,gBAAK,CAAC4C,EAAE,CAAG;cAAA,UAAC;YAEzD,EAAO;UAAA,EACF,EAEP,sBAAC,iBAAI;YAAC,KAAK,EAAE;cAAElD,aAAa,EAAE;YAAM,CAAE;YAAA,WACpC,qBAAC,kBAAK;cACJ,MAAM,EAAEmB,gBAAK,CAACgC,WAAY;cAC1B,UAAU,EAAC,SAAS;cACpB,KAAK,EAAE;gBACLvD,KAAK,EAAE,EAAE;gBACTH,MAAM,EAAE,EAAE;gBACVuD,SAAS,EAAE9C,iBAAM,CAACkC;cACpB;YAAE,EACF,EACF,qBAAC,iBAAI;cAAC,KAAK;gBAAIa,UAAU,EAAEvD,gBAAK,CAACmB;cAAO,GAAKP,gBAAK,CAAC4C,EAAE,CAAG;cAAA,UAAC;YAEzD,EAAO;UAAA,EACF;QAAA,EACF,EAGP,qBAAC,iBAAI;UACH,KAAK,EAAE;YACLrC,OAAO,EAAEnB,gBAAK,CAACmB,OAAO,GAAG,CAAC;YAC1BrB,UAAU,EAAE,QAAQ;YACpBO,cAAc,EAAE;UAClB,CAAE;UAAA,UAEF,qBAAC,6BAAgB;YACf,KAAK,EAAE;cACLH,KAAK,EAAEF,gBAAK,CAACE,KAAK,GAAG,GAAG;cACxBiB,OAAO,EAAEnB,gBAAK,CAACmB,OAAO;cACtBZ,eAAe,EAAEC,iBAAM,CAACmC,OAAO;cAC/B7C,UAAU,EAAE,QAAQ;cACpB8C,YAAY,EAAE5C,gBAAK,CAAC6C;YACtB,CAAE;YACF,OAAO,EAAE;cAAA,OACP7F,UAAU,CAAC0G,QAAQ,CAAC,eAAe,EAAE;gBACnCpG,UAAU,EAAEA,UAAU;gBACtBE,eAAe,EAAEA;cACnB,CAAC,CAAC;YAAA,CACH;YAAA,UAED,qBAAC,iBAAI;cAAC,KAAK;gBAAIoE,KAAK,EAAEpB,iBAAM,CAACC;cAAK,GAAKG,gBAAK,CAACE,EAAE,CAAG;cAAA,UAAC;YAEnD;UAAO;QACU,EACd;MAAA,EACF,EAEN,IAAA6C,mCAAS,GAAE,IACV,qBAAC,iBAAI;QACH,KAAK,EAAE;UACLxD,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,CAAC,EAAE;UACXwD,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACR9D,MAAM,EAAE,EAAE;UACVQ,eAAe,EAAEC,iBAAM,CAACC;QAC1B;MAAE,EAEL;IAAA,EACI;EAEX;EAEA,OACE,sBAAC,yBAAY;IAAC,KAAK,EAAEqD,MAAM,CAACC,SAAU;IAAA,WAEnC1E,cAAc,EAAE,EAChB0D,WAAW,EAAE;EAAA,EACD;AAEnB,CAAC;AAED,IAAMe,MAAM,GAAGE,uBAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACP3D,eAAe,EAAEC,iBAAM,CAAC0C;EAC1B;AACF,CAAC,CAAC;AAAC,eAEYpG,UAAU;AAAA"},"metadata":{},"sourceType":"script"}