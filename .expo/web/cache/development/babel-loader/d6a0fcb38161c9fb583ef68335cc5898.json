{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _ModalPresentationContext = _interopRequireDefault(require(\"../../utils/ModalPresentationContext\"));\nvar _useKeyboardManager2 = _interopRequireDefault(require(\"../../utils/useKeyboardManager\"));\nvar _Card = _interopRequireDefault(require(\"./Card\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar EPSILON = 0.1;\nfunction CardContainer(_ref) {\n  var interpolationIndex = _ref.interpolationIndex,\n    index = _ref.index,\n    active = _ref.active,\n    closing = _ref.closing,\n    gesture = _ref.gesture,\n    focused = _ref.focused,\n    modal = _ref.modal,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    headerDarkContent = _ref.headerDarkContent,\n    hasAbsoluteFloatHeader = _ref.hasAbsoluteFloatHeader,\n    headerHeight = _ref.headerHeight,\n    onHeaderHeightChange = _ref.onHeaderHeightChange,\n    isParentHeaderShown = _ref.isParentHeaderShown,\n    isNextScreenTransparent = _ref.isNextScreenTransparent,\n    detachCurrentScreen = _ref.detachCurrentScreen,\n    layout = _ref.layout,\n    onCloseRoute = _ref.onCloseRoute,\n    onOpenRoute = _ref.onOpenRoute,\n    onGestureCancel = _ref.onGestureCancel,\n    onGestureEnd = _ref.onGestureEnd,\n    onGestureStart = _ref.onGestureStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    onTransitionStart = _ref.onTransitionStart,\n    renderHeader = _ref.renderHeader,\n    renderScene = _ref.renderScene,\n    safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n    safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n    safeAreaInsetRight = _ref.safeAreaInsetRight,\n    safeAreaInsetTop = _ref.safeAreaInsetTop,\n    scene = _ref.scene;\n  var parentHeaderHeight = React.useContext(_elements.HeaderHeightContext);\n  var _useKeyboardManager = (0, _useKeyboardManager2.default)(React.useCallback(function () {\n      var _scene$descriptor = scene.descriptor,\n        options = _scene$descriptor.options,\n        navigation = _scene$descriptor.navigation;\n      return navigation.isFocused() && options.keyboardHandlingEnabled !== false;\n    }, [scene.descriptor])),\n    onPageChangeStart = _useKeyboardManager.onPageChangeStart,\n    onPageChangeCancel = _useKeyboardManager.onPageChangeCancel,\n    onPageChangeConfirm = _useKeyboardManager.onPageChangeConfirm;\n  var handleOpen = function handleOpen() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, false);\n    onOpenRoute({\n      route: route\n    });\n  };\n  var handleClose = function handleClose() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, true);\n    onCloseRoute({\n      route: route\n    });\n  };\n  var handleGestureBegin = function handleGestureBegin() {\n    var route = scene.descriptor.route;\n    onPageChangeStart();\n    onGestureStart({\n      route: route\n    });\n  };\n  var handleGestureCanceled = function handleGestureCanceled() {\n    var route = scene.descriptor.route;\n    onPageChangeCancel();\n    onGestureCancel({\n      route: route\n    });\n  };\n  var handleGestureEnd = function handleGestureEnd() {\n    var route = scene.descriptor.route;\n    onGestureEnd({\n      route: route\n    });\n  };\n  var handleTransition = function handleTransition(_ref2) {\n    var closing = _ref2.closing,\n      gesture = _ref2.gesture;\n    var route = scene.descriptor.route;\n    if (!gesture) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);\n    } else if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: route\n    }, closing);\n  };\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState('box-none'),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    pointerEvents = _React$useState2[0],\n    setPointerEvents = _React$useState2[1];\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var _scene$descriptor$opt = scene.descriptor.options,\n    presentation = _scene$descriptor$opt.presentation,\n    animationEnabled = _scene$descriptor$opt.animationEnabled,\n    cardOverlay = _scene$descriptor$opt.cardOverlay,\n    cardOverlayEnabled = _scene$descriptor$opt.cardOverlayEnabled,\n    cardShadowEnabled = _scene$descriptor$opt.cardShadowEnabled,\n    cardStyle = _scene$descriptor$opt.cardStyle,\n    cardStyleInterpolator = _scene$descriptor$opt.cardStyleInterpolator,\n    gestureDirection = _scene$descriptor$opt.gestureDirection,\n    gestureEnabled = _scene$descriptor$opt.gestureEnabled,\n    gestureResponseDistance = _scene$descriptor$opt.gestureResponseDistance,\n    gestureVelocityImpact = _scene$descriptor$opt.gestureVelocityImpact,\n    headerMode = _scene$descriptor$opt.headerMode,\n    headerShown = _scene$descriptor$opt.headerShown,\n    transitionSpec = _scene$descriptor$opt.transitionSpec;\n  var previousScene = getPreviousScene({\n    route: scene.descriptor.route\n  });\n  var backTitle;\n  if (previousScene) {\n    var _previousScene$descri = previousScene.descriptor,\n      options = _previousScene$descri.options,\n      route = _previousScene$descri.route;\n    backTitle = (0, _elements.getHeaderTitle)(options, route.name);\n  }\n  var headerBack = React.useMemo(function () {\n    return backTitle !== undefined ? {\n      title: backTitle\n    } : undefined;\n  }, [backTitle]);\n  return React.createElement(_Card.default, {\n    interpolationIndex: interpolationIndex,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransition: handleTransition,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: index === 0 ? false : gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode !== 'float' && presentation !== 'modal',\n    headerDarkContent: headerDarkContent,\n    containerStyle: hasAbsoluteFloatHeader && headerMode !== 'screen' ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: presentation === 'transparentModal' ? 'transparent' : colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden',\n      display: animationEnabled === false && isNextScreenTransparent === false && detachCurrentScreen !== false && !focused ? 'none' : 'flex'\n    }, _reactNative.StyleSheet.absoluteFill]\n  }, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, React.createElement(_ModalPresentationContext.default.Provider, {\n    value: modal\n  }, React.createElement(_reactNative.View, {\n    style: styles.scene\n  }, React.createElement(_elements.HeaderBackContext.Provider, {\n    value: headerBack\n  }, React.createElement(_elements.HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(_elements.HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0\n  }, renderScene({\n    route: scene.descriptor.route\n  }))))), headerMode !== 'float' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null)));\n}\nvar _default = React.memo(CardContainer);\nexports.default = _default;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["EPSILON","CardContainer","interpolationIndex","_ref","index","active","closing","gesture","focused","modal","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","React","useContext","HeaderHeightContext","useKeyboardManager","useCallback","descriptor","options","navigation","isFocused","keyboardHandlingEnabled","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","_ref2","insets","top","right","bottom","left","useTheme","colors","useState","pointerEvents","setPointerEvents","useEffect","listener","progress","next","_scene$progress$next","addListener","_scene$progress$next$","value","_ref3","_scene$progress$next2","removeListener","_scene$progress$next3","presentation","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","previousScene","backTitle","getHeaderTitle","name","headerBack","useMemo","undefined","title","Card","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","StyleSheet","absoluteFill","View","styles","container","ModalPresentationContext","Provider","HeaderBackContext","HeaderShownContext","mode","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"sourceRoot":"../../src","sources":["CardContainer.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}