{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ModalStatusBarManager;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ModalStatusBarManager(_ref) {\n  var _flattenedStyle$trans, _flattenedStyle$trans2;\n  var dark = _ref.dark,\n    layout = _ref.layout,\n    insets = _ref.insets,\n    style = _ref.style;\n  var _useTheme = (0, _native.useTheme)(),\n    darkTheme = _useTheme.dark;\n  var _React$useState = React.useState(true),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    overlapping = _React$useState2[0],\n    setOverlapping = _React$useState2[1];\n  var scale = 1 - 20 / layout.width;\n  var offset = (insets.top - 34) * scale;\n  var flattenedStyle = _reactNative.StyleSheet.flatten(style);\n  var translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(function (s) {\n    return s.translateY !== undefined;\n  })) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;\n  React.useEffect(function () {\n    var listener = function listener(_ref2) {\n      var value = _ref2.value;\n      setOverlapping(value < offset);\n    };\n    var sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);\n    return function () {\n      return translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);\n    };\n  }, [offset, translateY]);\n  var darkContent = dark != null ? dark : !darkTheme;\n  return React.createElement(_reactNative.StatusBar, {\n    animated: true,\n    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'\n  });\n}","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAAoD;AAAA;AAYrC,SAASA,qBAAqB,OAKnC;EAAA;EAAA,IAJRC,IAAI,GAIEC,KAJND,IAAI;IACJE,MAAM,GAGAD,KAHNC,MAAM;IACNC,MAAM,GAEAF,KAFNE,MAAM;IACNC,QACMH,KADNG;EAEA,gBAA4BC,oBAAQ,GAAE;IAAxBC,sBAANN,IAAI;EACZ,sBAAsCO,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnDC,WAAW;IAAEC,cAAc;EAElC,IAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAGT,MAAM,CAACU,KAAK;EACnC,IAAMC,MAAM,GAAG,CAACV,MAAM,CAACW,GAAG,GAAG,EAAE,IAAIH,KAAK;EAExC,IAAMI,cAAc,GAAGC,uBAAU,CAACC,OAAO,CAACb,KAAK,CAAC;EAChD,IAAMc,UAAU,GAAGH,cAAc,aAAdA,cAAc,gDAAdA,cAAc,CAAEI,SAAS,oFAAzBC,sBAA2BC,IAAI,CAC/CC,WAAM;IAAA,OAAKA,CAAC,CAACJ,UAAU,KAAKK,SAAS;EAAA,EACvC,2DAFkBC,uBAEhBN,UAAU;EAEbX,KAAK,CAACkB,SAAS,CAAC,YAAM;IACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,OAAkC;MAAA,IAA/BC,QAA0BD,MAA1BC;MAClBlB,cAAc,CAACkB,KAAK,GAAGf,MAAM,CAAC;IAChC,CAAC;IAED,IAAMgB,GAAG,GAAGX,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,WAAW,CAACJ,QAAQ,CAAC;IAE7C,OAAO;MAAA,OAAMR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,cAAc,CAACF,GAAG,CAAC;IAAA;EAC9C,CAAC,EAAE,CAAChB,MAAM,EAAEK,UAAU,CAAC,CAAC;EAExB,IAAMc,WAAW,GAAGhC,IAAI,WAAJA,IAAI,GAAI,CAACM,SAAS;EAEtC,OACEC,oBAAC0B,sBAAS;IACRC,QAAQ;IACRC,QAAQ,EAAE1B,WAAW,IAAIuB,WAAW,GAAG,cAAc,GAAG;EAAgB,EACxE;AAEN","names":["ModalStatusBarManager","dark","_ref","layout","insets","style","useTheme","darkTheme","React","useState","overlapping","setOverlapping","scale","width","offset","top","flattenedStyle","StyleSheet","flatten","translateY","transform","_flattenedStyle$trans","find","s","undefined","_flattenedStyle$trans2","useEffect","listener","_ref2","value","sub","addListener","removeListener","darkContent","StatusBar","animated","barStyle"],"sourceRoot":"../../src","sources":["ModalStatusBarManager.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}