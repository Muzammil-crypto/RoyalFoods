{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\nvar _screens = require(\"../screens\");\nvar _constants = require(\"../constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\World\\\\Downloads\\\\project\\\\navigation\\\\tabs.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\nvar TabBarCustomButton = function TabBarCustomButton(_ref) {\n  var accessibilityState = _ref.accessibilityState,\n    children = _ref.children,\n    onPress = _ref.onPress;\n  var isSelected = accessibilityState.selected;\n  if (isSelected) {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\"\n      },\n      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: {\n          flexDirection: \"row\",\n          position: \"absolute\",\n          top: 0\n        },\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            flex: 1,\n            backgroundColor: _constants.COLORS.white\n          }\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.default, {\n          width: 70,\n          height: 61,\n          viewBox: \"0 0 75 61\",\n          children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Path, {\n            d: \"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\",\n            fill: _constants.COLORS.white\n          })\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            flex: 1,\n            backgroundColor: _constants.COLORS.white\n          }\n        })]\n      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        style: {\n          top: -22.5,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: _constants.COLORS.white\n        },\n        onPress: onPress,\n        children: children\n      })]\n    });\n  } else {\n    return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: {\n        flex: 1,\n        height: 60,\n        backgroundColor: _constants.COLORS.white\n      },\n      activeOpacity: 1,\n      onPress: onPress,\n      children: children\n    });\n  }\n};\nvar CustomTabBar = function CustomTabBar(props) {\n  if ((0, _reactNativeIphoneXHelper.isIphoneX)()) {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: 0,\n          height: 30,\n          backgroundColor: _constants.COLORS.white\n        }\n      }), (0, _jsxRuntime.jsx)(_bottomTabs.BottomTabBar, Object.assign({}, props.props))]\n    });\n  } else {\n    return (0, _jsxRuntime.jsx)(_bottomTabs.BottomTabBar, Object.assign({}, props.props));\n  }\n};\nvar Tabs = function Tabs() {\n  return (0, _jsxRuntime.jsxs)(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        position: \"absolute\",\n        left: 0,\n        bottom: 0,\n        right: 0,\n        borderTopWidth: 0,\n        backgroundColor: \"transparent\",\n        elevation: 0\n      }\n    },\n    tabBar: function tabBar(props) {\n      return (0, _jsxRuntime.jsx)(CustomTabBar, {\n        props: props\n      });\n    },\n    children: [(0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Home\",\n      component: _screens.Home,\n      options: {\n        headerStyle: {\n          backgroundColor: _constants.COLORS.primary\n        },\n        headerTitleStyle: {\n          color: _constants.COLORS.white\n        },\n        headerTitleAlign: \"center\",\n        headerTitle: \"Bawarchi Kitchen\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return (0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: _constants.icons.cutlery,\n            resizeMode: \"contain\",\n            style: {\n              width: 25,\n              height: 25,\n              tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n            }\n          });\n        },\n        tabBarButton: function tabBarButton(props) {\n          return (0, _jsxRuntime.jsx)(TabBarCustomButton, Object.assign({}, props));\n        }\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Search\",\n      component: _screens.Home,\n      options: {\n        headerStyle: {\n          backgroundColor: _constants.COLORS.primary\n        },\n        headerTitleStyle: {\n          color: _constants.COLORS.white\n        },\n        headerTitleAlign: \"center\",\n        headerTitle: \"Bawarchi Kitchen\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return (0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: _constants.icons.search,\n            resizeMode: \"contain\",\n            style: {\n              width: 25,\n              height: 25,\n              tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n            }\n          });\n        },\n        tabBarButton: function tabBarButton(props) {\n          return (0, _jsxRuntime.jsx)(TabBarCustomButton, Object.assign({}, props));\n        }\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Like\",\n      component: _screens.Home,\n      options: {\n        headerStyle: {\n          backgroundColor: _constants.COLORS.primary\n        },\n        headerTitleStyle: {\n          color: _constants.COLORS.white\n        },\n        headerTitleAlign: \"center\",\n        headerTitle: \"Bawarchi Kitchen\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return (0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: _constants.icons.like,\n            resizeMode: \"contain\",\n            style: {\n              width: 25,\n              height: 25,\n              tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n            }\n          });\n        },\n        tabBarButton: function tabBarButton(props) {\n          return (0, _jsxRuntime.jsx)(TabBarCustomButton, Object.assign({}, props));\n        }\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"User\",\n      component: _screens.Home,\n      options: {\n        headerStyle: {\n          backgroundColor: _constants.COLORS.primary\n        },\n        headerTitleStyle: {\n          color: _constants.COLORS.white\n        },\n        headerTitleAlign: \"center\",\n        headerTitle: \"Bawarchi Kitchen\",\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused;\n          return (0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: _constants.icons.user,\n            resizeMode: \"contain\",\n            style: {\n              width: 25,\n              height: 25,\n              tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n            }\n          });\n        },\n        tabBarButton: function tabBarButton(props) {\n          return (0, _jsxRuntime.jsx)(TabBarCustomButton, Object.assign({}, props));\n        }\n      }\n    })]\n  });\n};\nvar _default = Tabs;\nexports.default = _default;","map":{"version":3,"names":["Tab","createBottomTabNavigator","TabBarCustomButton","accessibilityState","children","onPress","isSelected","selected","flex","alignItems","flexDirection","position","top","backgroundColor","COLORS","white","justifyContent","width","height","borderRadius","CustomTabBar","props","isIphoneX","bottom","left","right","Tabs","showLabel","style","borderTopWidth","elevation","Home","headerStyle","primary","headerTitleStyle","color","headerTitleAlign","headerTitle","tabBarIcon","focused","icons","cutlery","tintColor","secondary","tabBarButton","search","like","user"],"sources":["C:/Users/World/Downloads/project/navigation/tabs.js"],"sourcesContent":["import React from \"react\";\nimport { View, Image, TouchableOpacity } from \"react-native\";\nimport {\n  createBottomTabNavigator,\n  BottomTabBar,\n} from \"@react-navigation/bottom-tabs\";\nimport Svg, { Path } from \"react-native-svg\";\nimport { isIphoneX } from \"react-native-iphone-x-helper\";\n\nimport { Home, Restaurant } from \"../screens\";\n\nimport { COLORS, icons } from \"../constants\";\n\nconst Tab = createBottomTabNavigator();\n\nconst TabBarCustomButton = ({ accessibilityState, children, onPress }) => {\n  var isSelected = accessibilityState.selected;\n\n  if (isSelected) {\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ flexDirection: \"row\", position: \"absolute\", top: 0 }}>\n          <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n          <Svg width={70} height={61} viewBox=\"0 0 75 61\">\n            <Path\n              d=\"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\"\n              fill={COLORS.white}\n            />\n          </Svg>\n          <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n        </View>\n\n        <TouchableOpacity\n          style={{\n            top: -22.5,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: 50,\n            height: 50,\n            borderRadius: 25,\n            backgroundColor: COLORS.white,\n          }}\n          onPress={onPress}\n        >\n          {children}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          height: 60,\n          backgroundColor: COLORS.white,\n        }}\n        activeOpacity={1}\n        onPress={onPress}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n};\n\nconst CustomTabBar = (props) => {\n  if (isIphoneX()) {\n    return (\n      <View>\n        <View\n          style={{\n            position: \"absolute\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 30,\n            backgroundColor: COLORS.white,\n          }}\n        ></View>\n        <BottomTabBar {...props.props} />\n      </View>\n    );\n  } else {\n    return <BottomTabBar {...props.props} />;\n  }\n};\n\nconst Tabs = () => {\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        showLabel: false,\n        style: {\n          position: \"absolute\",\n          left: 0,\n          bottom: 0,\n          right: 0,\n          borderTopWidth: 0,\n          backgroundColor: \"transparent\",\n          elevation: 0,\n        },\n      }}\n      tabBar={(props) => <CustomTabBar props={props} />}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          headerStyle: { backgroundColor: COLORS.primary },\n          headerTitleStyle: { color: COLORS.white },\n          headerTitleAlign: \"center\",\n          headerTitle: \"Bawarchi Kitchen\",\n\n          tabBarIcon: ({ focused }) => (\n            <Image\n              source={icons.cutlery}\n              resizeMode=\"contain\"\n              style={{\n                width: 25,\n                height: 25,\n                tintColor: focused ? COLORS.primary : COLORS.secondary,\n              }}\n            />\n          ),\n          tabBarButton: (props) => <TabBarCustomButton {...props} />,\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Search\"\n        component={Home}\n        options={{\n          headerStyle: { backgroundColor: COLORS.primary },\n          headerTitleStyle: { color: COLORS.white },\n          headerTitleAlign: \"center\",\n          headerTitle: \"Bawarchi Kitchen\",\n\n          tabBarIcon: ({ focused }) => (\n            <Image\n              source={icons.search}\n              resizeMode=\"contain\"\n              style={{\n                width: 25,\n                height: 25,\n                tintColor: focused ? COLORS.primary : COLORS.secondary,\n              }}\n            />\n          ),\n          tabBarButton: (props) => <TabBarCustomButton {...props} />,\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Like\"\n        component={Home}\n        options={{\n          headerStyle: { backgroundColor: COLORS.primary },\n          headerTitleStyle: { color: COLORS.white },\n          headerTitleAlign: \"center\",\n          headerTitle: \"Bawarchi Kitchen\",\n\n          tabBarIcon: ({ focused }) => (\n            <Image\n              source={icons.like}\n              resizeMode=\"contain\"\n              style={{\n                width: 25,\n                height: 25,\n                tintColor: focused ? COLORS.primary : COLORS.secondary,\n              }}\n            />\n          ),\n          tabBarButton: (props) => <TabBarCustomButton {...props} />,\n        }}\n      />\n\n      <Tab.Screen\n        name=\"User\"\n        component={Home}\n        options={{\n          headerStyle: { backgroundColor: COLORS.primary },\n          headerTitleStyle: { color: COLORS.white },\n          headerTitleAlign: \"center\",\n          headerTitle: \"Bawarchi Kitchen\",\n\n          tabBarIcon: ({ focused }) => (\n            <Image\n              source={icons.user}\n              resizeMode=\"contain\"\n              style={{\n                width: 25,\n                height: 25,\n                tintColor: focused ? COLORS.primary : COLORS.secondary,\n              }}\n            />\n          ),\n          tabBarButton: (props) => <TabBarCustomButton {...props} />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default Tabs;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}